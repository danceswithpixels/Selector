<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_point</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>outside = 1;
captured = 0;

move_towards_point(room_width/2,room_height/2,5);

if irandom(3) == 3
    sprite_index = spr_lose;
    
xprevprev = 0;
yprevprev = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if captured == 0 {

if x &lt; room_width-8 and x &gt; 8 and y &lt; room_height-8 and y &gt; 8
    outside = 0;

if outside == 0 {
    if x &lt; 8 or x &gt; room_width-8
        hspeed = -hspeed;

    if y &lt; 8 or y &gt; room_height-8
        vspeed = -vspeed;
}

if x == xprevprev and y == yprevprev {
    outside = 1;
    switch(irandom(3)) {
        case 0: x = random_range(32,room_width-32); y = -32; break;
        case 1: x = room_width+32; y = random_range(32,room_height-32); break;
        case 2: x = random_range(32,room_width-32); y =room_height+32; break;
        case 3: x = -32; y = random_range(32,room_height-32); break;
    }
}
    
xprevprev = xprevious;
yprevprev = yprevious;
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// obj_block collision

/*if place_meeting(x+8,y,obj_block) and place_meeting(x-8,y,obj_block) and
place_meeting(x,y+8,obj_block) and place_meeting(x,y-8,obj_block) {
    captured = 1;
    exit;
}*/

if place_meeting(x+8,y,obj_block) or place_meeting(x-8,y,obj_block)
    hspeed = -hspeed;

if place_meeting(x,y+8,obj_block) or place_meeting(x,y-8,obj_block)
    vspeed = -vspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if captured == 1 {
    hspeed = -other.hspeed;
    vspeed = -other.vspeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_mouse.alive == 1 { //and obj_mouse.drag = 1 {

if ((x &lt; mouse_x and x &gt; global.xx) or (x &lt; global.xx and x &gt; mouse_x)) and
((y &lt; mouse_y and y &gt; global.yy) or (y &lt; global.yy and y &gt; mouse_y)) {
    
    if sprite_index == spr_lose
        obj_mouse.alive = 0;
    //else if captured == 0
        //obj_mouse.score++;

    captured = 1;
    //instance_destroy();
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if captured == 1 {
    //obj_mouse.score++;
    instance_destroy();
}

/*if outside == 0
    move_towards_point(random(room_width),random(room_height),5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
